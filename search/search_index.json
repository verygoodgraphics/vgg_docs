{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>VeryGoodGraphics (VGG) is an innovative application development toolkit that seamlessly unites two worlds of design and code for full-stack front-end developers.</p> <p></p> <p>VGG was designed from the ground up with developer experience (DX) in mind, along with three main features.</p> <ul> <li>Design as Code</li> <li>Cross Platform</li> <li>Ecosystem Compatibility</li> </ul>"},{"location":"#design-as-code","title":"Design as Code","text":"<p>Thanks to VGG Daruma, which is a file format with an open standard specification containing both design part and code part, VGG allows you to develop applications directly on design drafts, eliminating the need to write UI code on your own. More details could be found in Tutorial.</p> <p></p> <p>This so-called Design as Code workflow will save your time abundantly as it has great advantages over the traditional application development workflow or even the emerging Design to Code workflow where UI code is generated by machine.</p>"},{"location":"#cross-platform","title":"Cross Platform","text":"<p>Thanks to VGG Runtime and WebAssembly, VGG applications are able to run on all major platforms including desktop, mobile and web, with consistent UI visual effects and interaction behaviors independent of the platform.</p> <p></p>"},{"location":"#ecosystem-compatibility","title":"Ecosystem Compatibility","text":"<p>With VGG, you don't have to learn a new programming language, nor read verbose manuals of a low-code system and then worry about compatibility problems or even lock-in problems.</p> <p>With VGG, you can use your familiar programming languages and tools since VGG is not only compatible with common design tools (thanks to VGG Daruma), but also integrates seamlessly with mainstream development frameworks and IDEs. VGG achieves this compatibility through embedded components and plugins. You have the freedom to decide whether to use it in your existing project, as it comes at an almost negligible cost.</p> <p></p>"},{"location":"faq/","title":"VGG FAQ","text":""},{"location":"faq/#who-is-vgg-designed-for","title":"Who is VGG designed for?","text":"<p>VGG is designed for two kinds of people:</p> <ul> <li>Designers who want to make serious applications, rather than simple   prototypes.</li> <li>Developers who want to spend more time on business logic, rather than UI   code.</li> </ul> <p>When these two roles are combined, VGG serves independent developers, or as they are commonly called, indie hackers. They are both full-stack frontend designers and developers that always want a quick development process to turn ideas into real applications.</p>"},{"location":"faq/#whats-the-goal-of-vgg","title":"What's the goal of VGG?","text":"<p>The application development process, and particularly UI design and development, can be tedious, monotonous and low efficient.</p> <p>VGG aims to make the process of application UI design and development more efficient by:</p> <ul> <li>Eliminating the need for continuous communication efforts between designers   and developers.</li> <li>Reducing duplicated work efforts, such as reimplementing the UI with code to   ensure it's pixel-perfectly the same as the original design.</li> </ul> <p>VGG also aims to provide the best developer experience, along with cross-platform capability and ecosystem compatibility.</p>"},{"location":"faq/#why-call-it-design-as-code-i-believe-its-just-another-design-to-code-tool","title":"Why call it design-as-code? I believe it's just another design-to-code tool.","text":"<p>Not exactly. VGG doesn't convert designs into web codes like HTML/CSS/JS. Instead, it converts designs into Daruma format which is both a design format and an application format.</p> <p>We use the term design-as-code because VGG seamlessly combined design and code, which led us to coin this phrase.</p>"},{"location":"faq/#is-it-a-low-code-product","title":"Is it a low-code product?","text":"<p>Not really.</p>"},{"location":"faq/#what-can-i-do-with-vgg-runtime","title":"What can I do with VGG Runtime?","text":"<p>VGG Runtime is an engine with two primary functionalities:</p> <ul> <li> <p>The first is its complete 2D vector graphics capability, dedicated to   rendering high-fidelity design drafts as user interfaces (UIs).</p> </li> <li> <p>The second is the ability to program and run design drafts as applications,   providing more power than simple prototypes.</p> </li> </ul> <p>VGG achieves its goal with the combination of these two features. However, you can also build a professional vector graphics editor like Figma or even Illustrator based solely on the first graphics capability. VGG already builds a solid foundation for it with a graphics definition (Daruma Design Format) and a rendering implementation.</p> <p>Please note that VGG is free and open source, released under the VGG License.</p>"},{"location":"tutorial/","title":"VGG Tutorial","text":"<p>VGG is a toolkit composed of many separate tools, each of which focuses on a specific task during application development. These tasks are roughly divided into three parts as follows:</p> <ol> <li>Import a design as the foundation for UI development.</li> <li>Develop directly on the design by adding layout and code.</li> <li>Deploy it as an independent application or as an embedded component    within your existing project.</li> </ol> <p>Let's walk through them step by step.</p>"},{"location":"tutorial/#import","title":"Import","text":"<p>VGG Daruma is VGG's underlying file format, and you need to import your design files into Daruma first.</p> <p>Once this is done, Daruma will provide you with a <code>.daruma</code> file for further development. You can choose to download it for local development, or for remote development through a unique <code>daruma id</code>.</p> <p>Since Daruma Formats is an open standard specification, you have the option to create and assemble it independently, but this method is less efficient and not recommended.</p> <p>Please be aware that, as for now, VGG does not have an official editor for Daruma files. Our team is currently prioritizing the development of the core engine, namely VGG Runtime. We recommend using well-established design tools such as Figma or Sketch as your UI builders and relying on Daruma's import functionality.</p>"},{"location":"tutorial/#develop","title":"Develop","text":"<p>Suppose you already have a Daruma file. The next step is to add layout semantics and interaction behaviors to it, along with a runtime for interactive development and debugging.</p>"},{"location":"tutorial/#how-to-write-layout-and-code-into-a-daruma-file","title":"How to write layout and code into a Daruma file?","text":"<p>The most convenient way is to use VGG Playground to locally open, edit, debug and save your Daruma file.</p> <p>Local editing functionality is coming soon. Stay tuned!</p> <p>Alternatively, you can use an editor with an unzip function to directly edit the code within the Daruma file.</p>"},{"location":"tutorial/#whats-the-form-of-layout-semantics-and-interaction-behaviors","title":"What's the form of layout semantics and interaction behaviors?","text":"<p>First, layout semantics are defined in JSON according to the Daruma Layout Format.</p> <p>Second, interaction behaviors can be expressed in JavaScript or any language that can be compiled into WebAssembly. You will also need to establish the correct mappings between the UI and the code.</p> <p>Tools to assist with mapping construction will be available soon. Stay tuned!</p>"},{"location":"tutorial/#how-to-manipulate-the-internal-data-of-daruma-file-or-make-use-of-vgg-apis","title":"How to manipulate the internal data of Daruma file or make use of VGG APIs?","text":"<p>This can be achieved through VGG SDKs. Please select one of our provided SDKs that suits your preferred programming language.</p>"},{"location":"tutorial/#how-to-run-the-daruma-file","title":"How to run the Daruma file?","text":"<p>VGG Playground already includes an embedded WASM-version runtime for visualizing and interacting with a Daruma file.</p> <p>However, if you wish to run a Daruma file natively, you have the option to build VGG Runtime on your own. Please refer to Build Instructions for more details.</p>"},{"location":"tutorial/#deploy","title":"Deploy","text":"<p>When the development is done, you have many options to deploy and distribute your VGG applications, say</p> <ul> <li> <p>As a Web application. You can deploy it independently or embedded through   vgg_html, vgg_react and more.</p> </li> <li> <p>As a Desktop application. You can deploy it independently through   vgg_runtime, or embedded   through vgg_qt and more.</p> </li> <li> <p>As a mobile application. You can deploy it independently or embedded through   vgg_android or vgg_ios.</p> </li> </ul> <p>Please note that currently only <code>vgg_react</code> and a standalone <code>sdl_runtime</code> produced by <code>vgg_runtime</code> are available.</p> <p>Similar to development, deployment has two methods. You can choose to host your Daruma file on your own, online or shipped with your local applications. You can also choose to use Daruma CDN service for application hosting.</p>"},{"location":"components/","title":"VGG Components","text":"<p>VGG application not only runs indepdently but also functions as a component compatible with an existing UI framework.</p> <p>Whether it's a small div, a medium section or an entire page, the VGG component takes control of that area and helps eliminate the need to recreate complex UI effects from design drafts in that specific area.</p> <p>Currently only VGG React component is available. Other components are comming soon.</p>"},{"location":"components/react/","title":"VGG React Component","text":"<p>Please refer to github vgg_react.</p>"},{"location":"examples/","title":"Examples","text":"Example UI Layout Interaction Source Code Counter \u2705 \u2705 Github VGG Homepage \u2705 \u2705 \u2705 Playground"},{"location":"plugins/","title":"VGG Plugins","text":"<p>VGG Plugins provides mainstream IDE plugins to help your develop VGG applications better. Stay tuned.</p>"},{"location":"sdks/","title":"VGG SDKs","text":"<p>VGG SDKs provide VGG APIs to VGG users, allowing them to access the underlying data of VGG Daruma and the functions of VGG Runtime. These SDKs are used in conjunction with VGG Components and VGG Widgets.</p> <p>For example, the VGG JavaScript SDK may be used in conjunction with VGG React component as it is a web UI framework with JavaScript programming language. The reusable VGG widgets can be developed with one VGG SDK and used with another VGG SDK in a different language.</p> SDK Status JavaScript SDK Released C++ SDK Comming Soon Rust SDK WIP Zig SDK WIP"},{"location":"sdks/js_sdk/","title":"JavaScript SDK","text":"<p>Please refer to github vgg_js_sdk and NPM package @verygoodgraphics/vgg-sdk.</p>"},{"location":"what/daruma/","title":"VGG Daruma","text":"<p>VGG Daruma is both a file format and an online service which converts any design file into Daruma format, and also renders design file into previewing images without requiring the original design software.</p> <p>Please refer to VGG Daruma Website for more details.</p>"},{"location":"what/relation/","title":"Relationship between Daruma and Runtime","text":"<p>VGG Daruma is a self-contained file format with everything needed to run an App including UI, layout, resources, and code. VGG takes Daruma as its underlying application format and uses VGG Runtime to render and run VGG applications.</p> <p>The relationship between Daruma and Runtime is like that between HTML/CSS/JS and browsers, and is also like that between SWF file and Flash player.</p>"},{"location":"what/runtime/","title":"VGG Runtime","text":"<p>VGG Runtime is the core of VGG, capable of rendering Daruma files and running VGG applications. It serves as the foundation for VGG components, which are essentially wrappers around the runtime, adapted to various platforms and frameworks.</p> <p>VGG Runtime is open sourced under VGG License and is free to use.</p>"},{"location":"what/tools/","title":"VGG Developer Tools","text":"<p>VGG Developer Tools include:</p> <ul> <li>VGG Components</li> <li>VGG Widgets</li> <li>VGG SDKs</li> <li>VGG Plugins</li> </ul> <p>Apart from these tools, there is a VGG Playground and an upcoming VGG Editor.</p>"},{"location":"widgets/","title":"VGG Widgets","text":"<p>VGG Widgets is a collection of reusable UI elements for use in UI development, including buttons, checkboxes, comboboxes, tabs and more.</p> <p>Widgets will be released along with VGG Editor. Stay tuned.</p>"}]}