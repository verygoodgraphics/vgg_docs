"use strict";(self.webpackChunkvgg_docs=self.webpackChunkvgg_docs||[]).push([[8306],{1311:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>a});var t=r(3010),i=r(5002);const l={title:"Shape",sidebar_class_name:"show"},n=void 0,d={id:"specs/vectorgraphics/shape",title:"Shape",description:"object",source:"@site/docs/specs/vectorgraphics/shape.md",sourceDirName:"specs/vectorgraphics",slug:"/specs/vectorgraphics/shape",permalink:"/specs/vectorgraphics/shape",draft:!1,unlisted:!1,editUrl:"https://github.com/verygoodgraphics/vgg_docs/tree/main/docs/specs/vectorgraphics/shape.md",tags:[],version:"current",frontMatter:{title:"Shape",sidebar_class_name:"show"},sidebar:"specSidebar",previous:{title:"Shadow",permalink:"/specs/vectorgraphics/shadow"},next:{title:"Star",permalink:"/specs/vectorgraphics/star"}},c={},a=[{value:"class",id:"class",level:2},{value:"subshapes",id:"subshapes",level:2},{value:"windingRule",id:"windingrule",level:2},{value:"radius",id:"radius",level:2}];function h(e){const s={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("div",{className:"section-type",children:(0,t.jsx)("div",{className:"badge-type",children:"object"})}),"\n",(0,t.jsx)(s.p,{children:"The shape of a path. Shape represents a vector geometry which is formed by individual subshapes combined together via boolean operations."}),"\n",(0,t.jsx)("div",{className:"property-preview",children:(0,t.jsx)("div",{className:"property-table",children:(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Property"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.a,{href:"#class",children:"class"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"string"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)("span",{className:"property-required",children:"Required"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.a,{href:"#subshapes",children:"subshapes"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsxs)("code",{children:["Array<",(0,t.jsx)("a",{href:"/specs/vectorgraphics/sub-shape",children:"SubShape"}),">"]})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)("span",{className:"property-required",children:"Required"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.a,{href:"#windingrule",children:"windingRule"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"integer"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)("span",{className:"property-required",children:"Required"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.a,{href:"#radius",children:"radius"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"number"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)("span",{className:"property-optional",children:"Optional"})})]})]})]})})}),"\n",(0,t.jsxs)("div",{className:"property",children:[(0,t.jsxs)("div",{className:"property-heading",children:[(0,t.jsx)(s.h2,{id:"class",children:"class"}),(0,t.jsx)("span",{className:"property-required",children:"Required"})]}),(0,t.jsxs)("div",{className:"property-item",children:[(0,t.jsx)(s.p,{children:"Type"}),(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"string"})})]}),(0,t.jsxs)("div",{className:"property-item",children:[(0,t.jsx)(s.p,{children:"Value"}),(0,t.jsxs)("div",{className:"value-description",children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"constant"}),": the value of this property must be equal to:"]}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'"shape"\n'})})]})]})]}),"\n",(0,t.jsxs)("div",{className:"property",children:[(0,t.jsxs)("div",{className:"property-heading",children:[(0,t.jsx)(s.h2,{id:"subshapes",children:"subshapes"}),(0,t.jsx)("span",{className:"property-required",children:"Required"})]}),(0,t.jsxs)("div",{className:"property-item",children:[(0,t.jsx)(s.p,{children:"Description"}),(0,t.jsx)(s.p,{children:"A list of subshapes in the shape."})]}),(0,t.jsxs)("div",{className:"property-item",children:[(0,t.jsx)(s.p,{children:"Type"}),(0,t.jsxs)("code",{children:["Array<",(0,t.jsx)("a",{href:"/specs/vectorgraphics/sub-shape",children:"SubShape"}),">"]})]})]}),"\n",(0,t.jsxs)("div",{className:"property",children:[(0,t.jsxs)("div",{className:"property-heading",children:[(0,t.jsx)(s.h2,{id:"windingrule",children:"windingRule"}),(0,t.jsx)("span",{className:"property-required",children:"Required"})]}),(0,t.jsxs)("div",{className:"property-item",children:[(0,t.jsx)(s.p,{children:"Description"}),(0,t.jsx)(s.p,{children:"The rule determining whether an area is inside or outside a path."})]}),(0,t.jsxs)("div",{className:"property-item",children:[(0,t.jsx)(s.p,{children:"Type"}),(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"integer"})})]}),(0,t.jsxs)("div",{className:"property-item",children:[(0,t.jsx)(s.p,{children:"Value"}),(0,t.jsxs)("div",{className:"value-description",children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"enum"}),": the value of this property must be equal to one of the following values:"]}),(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Value"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Explanation"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"0"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)("div",{className:"enum-description",children:"non-zero"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"1"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)("div",{className:"enum-description",children:"even-odd"})})]})]})]})]})]}),(0,t.jsxs)("div",{className:"property-item",children:[(0,t.jsx)("p",{}),(0,t.jsx)("div",{className:"property-images",children:(0,t.jsx)("img",{src:"https://raw.githubusercontent.com/verygoodgraphics/resource/main/img/vector/Path/windingRule.png",alt:""})})]})]}),"\n",(0,t.jsxs)("div",{className:"property",children:[(0,t.jsxs)("div",{className:"property-heading",children:[(0,t.jsx)(s.h2,{id:"radius",children:"radius"}),(0,t.jsx)("span",{className:"property-optional",children:"Optional"})]}),(0,t.jsxs)("div",{className:"property-item",children:[(0,t.jsx)(s.p,{children:"Description"}),(0,t.jsxs)(s.p,{children:["The radius of the shape, when the ",(0,t.jsx)(s.code,{children:"subshapes"})," have boolean operations.\nAffects the corners of all ",(0,t.jsx)(s.code,{children:"subshapes"})," under the shape, as well as the corners of the overlapping region of the ",(0,t.jsx)(s.code,{children:"subshapes"}),".\nThe ",(0,t.jsx)(s.code,{children:"radius"})," of the subshapes override this radius."]})]}),(0,t.jsxs)("div",{className:"property-item",children:[(0,t.jsx)(s.p,{children:"Type"}),(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"number"})})]})]})]})}function p(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},5002:(e,s,r)=>{r.d(s,{Z:()=>d,a:()=>n});var t=r(5170);const i={},l=t.createContext(i);function n(e){const s=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),t.createElement(l.Provider,{value:s},e.children)}}}]);